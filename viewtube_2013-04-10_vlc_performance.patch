--- 87011_org.user.js	2013-04-17 21:49:08.498924357 +0200
+++ 87011_new.user.js	2013-04-17 22:01:50.213348312 +0200
@@ -92,7 +92,7 @@ var page = {win: window, doc: document,
 var player = {};
 var feature = {'autoplay': true, 'definition': true, 'container': true, 'widesize': true, 'fullsize': true};
 var option = {'plugin': 'Auto', 'autoplay': false, 'autoget': false, 'definition': 'HD', 'container': 'MP4', 'widesize': false, 'fullsize': false};
-var plugins = ['Auto', 'Alt', 'HTML5', 'MPEG', 'MP4', 'FLV', 'VLC'];
+var plugins = ['Auto', 'HTML5', 'MPEG', 'MP4', 'FLV', 'VLC'];
 if (navigator.platform.indexOf('Win') != -1) plugins = plugins.concat(['WMP', 'WMP2', 'QT']);
 else if (navigator.platform.indexOf('Mac') != -1) plugins = plugins.concat(['QT']);
 var mimetypes = {
@@ -123,6 +123,37 @@ if (window.top != window.self)  return;
  
 // ==========Functions========== //
 
+function createVideoElement (type, content) {
+  function createPlayerElement (type, content) {
+    player['contentVideo'] = createMyElement (type, content, '', '', '');
+    player['contentVideo'].width = player['contentWidth'];
+    player['contentVideo'].height = player['contentHeight'];
+    styleMyElement (player['contentVideo'], {width: player['contentWidth'] + 'px', height: player['contentHeight'] + 'px'});
+    modifyMyElement (player['playerContent'], 'div', '', true);
+    appendMyElement (player['playerContent'], player['contentVideo']); 
+  }
+  /* Resolve redirects, if possible */
+    try {
+    var GM_xml = GM_xmlhttpRequest({
+        method: "HEAD",
+        url: content,
+        synchronous: false,
+        onload: function(response) {
+          createPlayerElement(type, response.finalUrl);
+        },
+        onabort: function(response) {
+          createPlayerElement(type, response.finalUrl);
+        },
+        onprogress: function(response) {    // for testing the abort. This is required in Greasemonkey as it will dowload complete content despite the "HEAD" request method!!!
+          GM_xml.abort();
+        }
+      });
+    }
+    catch(e) {
+      createPlayerElement(type, content);
+    }    
+}
+
 function createMyElement (type, content, event, action, target) {
   var obj = page.doc.createElement(type);
   if (content) {
@@ -141,7 +172,7 @@ function createMyElement (type, content,
       obj.innerHTML = '<br><br>The video should be loading. If it doesn\'t load, make sure a video plugin is installed. If you think it\'s a script issue, please report it <a href="' + contact + '">here</a>.<param name="scale" value="tofit"><param name="scale" value="exactfit"><param name="stretchtofit" value="true"><param name="autostart" value="true"><param name="autoplay" value="true">';
     }
     else if (type == 'embed') {
-      obj.src = content;
+      obj.setAttribute("src", content);
       obj.innerHTML = '<br><br>The video should be loading. If it doesn\'t load, make sure a video plugin is installed. If you think it\'s a script issue, please report it <a href="' + contact + '">here</a>.<param name="scale" value="tofit"><param name="scale" value="exactfit"><param name="stretchtofit" value="true"><param name="autostart" value="true"><param name="autoplay" value="true">';
     }
   }
@@ -497,14 +528,9 @@ function playMyVideo (play) {
     player['isPlaying'] = true;
     modifyMyElement (player['buttonPlay'], 'div', 'Stop', false);
     styleMyElement (player['buttonPlay'], {color: '#AD0000'});
-    if (option['plugin'] == 'HTML5') player['contentVideo'] = createMyElement ('video', player['videoList'][player['videoPlay']], '', '', '');
-    else if (option['plugin'] == 'Alt') player['contentVideo'] = createMyElement ('embed', player['videoList'][player['videoPlay']], '', '', '');
-    else player['contentVideo'] = createMyElement ('object', player['videoList'][player['videoPlay']], '', '', '');
-    player['contentVideo'].width = player['contentWidth'];
-    player['contentVideo'].height = player['contentHeight'];
-    styleMyElement (player['contentVideo'], {position: 'relative', width: player['contentWidth'] + 'px', height: player['contentHeight'] + 'px'});
-    modifyMyElement (player['playerContent'], 'div', '', true);
-    appendMyElement (player['playerContent'], player['contentVideo']);
+    if (option['plugin'] == 'HTML5') player['contentVideo'] = createVideoElement ('video', player['videoList'][player['videoPlay']]);
+    else if (((navigator.appName == 'Netscape') && (navigator.userAgent.indexOf("AppleWebKit") == -1))) player['contentVideo'] = createVideoElement ('embed', player['videoList'][player['videoPlay']]);
+    else createVideoElement ('object', player['videoList'][player['videoPlay']]);
   }
   else {
     player['isPlaying'] = false;
